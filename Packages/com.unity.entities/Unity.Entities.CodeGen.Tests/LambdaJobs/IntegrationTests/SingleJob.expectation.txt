using NUnit.Framework;
using Unity.Burst;
using Unity.Collections;
using Unity.Collections.LowLevel.Unsafe;
using Unity.Entities.CodeGen.Tests.LambdaJobs.Infrastructure;
using Unity.Entities.CodeGeneratedJobForEach;
using Unity.Jobs;

namespace Unity.Entities.CodeGen.Tests
{
	[TestFixture]
	public class SingleJob : IntegrationTest
	{
		private class System : JobComponentSystem
		{
			[BurstCompile]
			private struct System_OnUpdate_LambdaJob0 : IJob
			{
				[NativeDisableUnsafePtrRestriction]
				public NativeArray<float> myCapturedFloats;

				public void ReadFromDisplayClass(<>c__DisplayClass0_0 displayClass)
				{
					myCapturedFloats = displayClass.myCapturedFloats;
				}

				public void OriginalLambdaBody()
				{
					for (int i = 0; i != myCapturedFloats.Length; i++)
					{
						ref NativeArray<float> reference = ref myCapturedFloats;
						int index = i;
						reference[index] *= 2f;
					}
				}

				public void Execute()
				{
					OriginalLambdaBody();
				}

				public void ScheduleTimeInitialize(JobComponentSystem jobComponentSystem, <>c__DisplayClass0_0 displayClass)
				{
					ReadFromDisplayClass(displayClass);
				}
			}

			protected override JobHandle OnUpdate(JobHandle inputDeps)
			{
				NativeArray<float> myCapturedFloats = default(NativeArray<float>);
				LambdaSingleJobDescription job = base.Job;
				System_OnUpdate_LambdaJob0 jobData = default(System_OnUpdate_LambdaJob0);
				<>c__DisplayClass0_0 displayClass;
				jobData.ScheduleTimeInitialize(this, displayClass);
				return IJobExtensions.Schedule(jobData, inputDeps);
			}
		}

		[Test]
		public void SingleJobTest()
		{
			RunTest<System>();
		}
	}
}
